name: DESC GitHub Actions example 4

# How does the workflow get triggered?
on: [workflow_dispatch]

# List of jobs for this workflow.
jobs:
  ci-with-pytest:
    # Required to activate miniconda environment.
    defaults:
      run:
        shell: bash -l {0}

    # Our strategy lists the OS and Python versions we want to test on.
    strategy:

      # Don't quit all jobs if only one job fails.
      fail-fast: false
      
      matrix:
        python-version: [py37, py38, py39]
        docker-os: [ubuntu-18.04, ubuntu-20.04]
        experimental: [false]

        # Test on this, but don't mind if it fails.
        include:
          - docker-os: ubuntu-22.04
            python-version: py38
            experimental: true

    # If True, do not fail the job, just warn me.
    continue-on-error: ${{ matrix.experimental }}

    # What operating system is this job running on?
    runs-on: ubuntu-20.04

    container: lsstdesc/desc-python-${{ matrix.docker-os }}-${{ matrix.python-version }}:ci-dev

    # Our CI steps for this job.
    steps:
      # Print information about his job.
      - run: echo "Running on ${{ matrix.docker-os }} with Python ${{ matrix.python-version }}"      
     
      # Check out this repository code.
      - name: Check out repository code
        uses: actions/checkout@v3

      # Do some basic code linting using flake8. Check for syntax and indentation errors.
      - name: flake8 linting.
        run: flake8 --count --select=E1,E9 --show-source --statistics ./python/my_arithmetic.py

      # Perform the unit tests and output a report.
      - name: Test with pytest
        run: |
          mamba install -c conda-forge -y pytest-cov  
          pytest --cov --cov-report xml ./python
          
      # Upload the code coverage reults to codecov.io.
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
